/***********************************************
*------------ Generated by Mordred ------------*
*------ YOU SHOULD NOT EDIT THIS FILE !!! -----*
***********************************************/

import { graphql } from 'graphql'
import { makeExecutableSchema } from 'graphql-tools'
import { GraphQLJSON } from 'graphql-type-json'
import nodes from './nodes'

export const typeDefs = [`
  scalar JSON

  type Query {
    hello: String
  }
`]

export const resolvers = [{
  JSON: GraphQLJSON
}]

const resolverArgs = {
  nodes
}

<% plugins.forEach(function (plugin, index) { %>

<% if (plugin.getSchema) { %>
  typeDefs.push(`<%- plugin.getSchema() %>`)
<% } %>

<% if (plugin.getResolvers) { %>
  import getResolvers_<%= index %> from '<%= plugin.getResolvers().replace(/\\/g, '') %>'
  resolvers.push(getResolvers_<%= index %>(resolverArgs))
<% } %>


<% }) %>

export const schema = makeExecutableSchema({
  typeDefs,
  resolvers
})

export const query = (query, { variables } = {}) => {
  return graphql(schema, query, {}, {}, variables)
}

export function gql(literals, ...variables) {
  return literals
    .map((l, i) => {
      const variable = variables[i]
      return `${l}${variable ? variable : ''}`
    })
    .join('')
}
